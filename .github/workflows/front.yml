name: FRONT BUILD PUSH & DEPLOY

on:
  push:
    branches: [ "main" ]
    paths:
      - "front/**"
      - ".github/workflows/build-and-push-front.yml"
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: dev-ecr
  CLUSTER_NAME: dev-eks
  NAMESPACE: back

jobs:
  build-and-push-front:
    runs-on: ubuntu-latest
    environment: prod_aws

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (front/)
        uses: docker/build-push-action@v6
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:front
          provenance: false         # <- evita subir attestation de provenance
          sbom: false               # <- evita subir el SBOM como artefacto
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy_front:
      name: Deploy Front
      needs: [build-and-push-front]
      runs-on: ubuntu-latest
      environment: prod_aws
      steps:
        - uses: actions/checkout@v4

        - name: Configure AWS
          uses: aws-actions/configure-aws-credentials@v4
          with:
            aws-access-key-id:     ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region:            ${{ env.AWS_REGION }}

        - name: Setup kubectl
          uses: azure/setup-kubectl@v4
          with:
            version: v1.30.0

        - name: Update kubeconfig
          run: aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

        - name: Ensure namespace
          run: kubectl get ns $NAMESPACE || kubectl create namespace $NAMESPACE

        - name: Bump annotation to force rollout
          run: |
            kubectl -n $NAMESPACE annotate deployment front-deployment ci-kick=$(date +%s) --overwrite || true

        - name: Apply front manifest
          run: |
            kubectl apply -f $FRONT_MANIFEST
            kubectl rollout status deployment/front-deployment -n $NAMESPACE --timeout=300s

        - name: Show shared ALB hostname(s)
          run: |
            sudo apt-get update && sudo apt-get install -y jq
            kubectl get ingress -n $NAMESPACE -o json \
            | jq -r '.items[] | select(.metadata.annotations["alb.ingress.kubernetes.io/group.name"]=="web") \
              | .metadata.name + " -> " + (.status.loadBalancer.ingress[0].hostname // "pending")' | sort -u