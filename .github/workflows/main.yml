name: Build & Push FRONT to ECR (prod)

on:
  push:
    branches: [ "main" ]
    paths:
      - "front/**"
      - ".github/workflows/build-and-push-front.yml"
  workflow_dispatch:

env:
  AWS_REGION: us-east-1                 # <-- ajusta tu región
  ECR_REPOSITORY: dev-ecr          # <-- repo ECR para el front
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push-front:
    runs-on: ubuntu-latest
    environment: prod_aws
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Credenciales AWS (elige OIDC o Access Keys según lo que tengas en prod_aws)
      - name: Configure AWS creds via OIDC
        if: ${{ secrets.AWS_ROLE_ARN != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Configure AWS creds via Access Keys
        if: ${{ secrets.AWS_ROLE_ARN == '' && secrets.AWS_ACCESS_KEY_ID != '' && secrets.AWS_SECRET_ACCESS_KEY != '' }}
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository exists
        run: |
          aws ecr describe-repositories --repository-names "${ECR_REPOSITORY}" >/dev/null 2>&1 || \
          aws ecr create-repository --repository-name "${ECR_REPOSITORY}" >/dev/null

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (front/)
        uses: docker/build-push-action@v6
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
            ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
